{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","st","console","log","catch","err","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","bind","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGaA,EAAO,SAACC,GAAD,OACnB,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEJ,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCNWC,G,MAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GACpB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLjBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCGG,E,kDAzCd,aAAe,IAAD,8BACb,gBAEKC,MAAQ,CACZR,SAAU,GACVS,YAAa,IALD,E,qDAWd,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEf,SAAUc,OACzCH,MAAK,SAACK,GAAD,OAAQC,QAAQC,IAAI,EAAKV,UAC9BW,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,qB,0BAG9B,SAAaG,GACZC,KAAKP,SAAS,CAAEN,YAAaY,EAAEE,OAAOC,U,oBAGvC,WAAU,IAAD,EAC0BF,KAAKd,MAA/BR,EADA,EACAA,SAAUS,EADV,EACUA,YACZgB,EAAmBzB,EAAS0B,QAAO,SAAC/B,GAAD,OACxCA,EAAQE,KAAK8B,cAAcC,SAASnB,EAAYkB,kBAEjD,OACC,sBAAKnC,UAAU,MAAf,UACC,oBAAIA,UAAU,UAAd,4BACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAckB,KAAKlB,aAAayB,KAAKP,QAEtC,cAAC,EAAD,CAAUtB,SAAUyB,W,GApCNK,aCOHC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDXO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.be9a3a31.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n\t<div className='card-container'>\n\t\t<img\n\t\t\talt='monsters'\n\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n\t\t/>\n\t\t<h2> {props.monster.name} </h2>\n\t\t<p> {props.monster.email} </p>\n\t</div>\n);\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n\treturn (\n\t\t<div className='card-list'>\n\t\t\t{props.monsters.map((monster) => {\n\t\t\t\treturn <Card key={monster.id} monster={monster} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t<input\n\t\tclassName='search'\n\t\ttype='search'\n\t\tplaceholder={placeholder}\n\t\tonChange={handleChange}\n\t/>\n);\n","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './component/card-list/card-list.component';\nimport { SearchBox } from './component/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t};\n\n\t\t// this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((user) => this.setState({ monsters: user }))\n\t\t\t.then((st) => console.log(this.state))\n\t\t\t.catch((err) => console.log('Error found!'));\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ searchField: e.target.value });\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1 className='heading'>Monster Info!!</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='Search monsters'\n\t\t\t\t\thandleChange={this.handleChange.bind(this)}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}